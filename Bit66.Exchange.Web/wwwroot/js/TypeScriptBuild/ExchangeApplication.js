/// <reference path="../typings/knockout/knockout.d.ts" />
/// <reference path="../typings/jquery/jquery.d.ts" />
define(["require", "exports", 'jquery', 'knockout', "./ExchangeGroupViewModel"], function (require, exports, $, ko, ExchangeGroupViewModel) {
    var ExchangeEditorViewModel = ExchangeGroupViewModel.Common.ExchangeEditorViewModel;
    var ExcahngeApplication = (function () {
        function ExcahngeApplication() {
            var _this = this;
            this.IsBusy = ko.observable(true);
            this.SaleViewModel = new ExchangeEditorViewModel(true);
            this.PurchaseViewModel = new ExchangeEditorViewModel(false);
            this.RegisteredItems = ko.observableArray();
            this.initialize = function () {
                _this.refresh();
            };
            this.refresh = function () {
                _this.IsBusy(true);
                $.get("/api/v1/Exchange/GetModel", function (data) {
                    console.log(data);
                    _this.IsBusy(false);
                    _this.SaleViewModel.CleanUp();
                    _this.SaleViewModel.Items(data.SalesOrders);
                    _this.PurchaseViewModel.CleanUp();
                    _this.PurchaseViewModel.Items(data.PurchaseOrders);
                    _this.RegisteredItems(data.Registrations);
                });
            };
            this.addNewExchangeGroup = function (isSale) {
                var url = "/api/v1/Exchange/" + (isSale ? "AddNewSaleItem" : "AddNewPurchaiseItem");
                var vm = isSale ? _this.SaleViewModel : _this.PurchaseViewModel;
                var model = ko.toJS(vm);
                $.post(url, { model: model }, function () {
                    _this.initialize();
                });
            };
        }
        return ExcahngeApplication;
    })();
    return ExcahngeApplication;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV4Y2hhbmdlQXBwbGljYXRpb24udHMiXSwibmFtZXMiOlsiRXhjYWhuZ2VBcHBsaWNhdGlvbiIsIkV4Y2FobmdlQXBwbGljYXRpb24uY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiJBQUFBLDBEQUEwRDtBQUMxRCxzREFBc0Q7O0lBS3RELElBQU8sdUJBQXVCLEdBQUcsc0JBQXNCLENBQUMsTUFBTSxDQUFDLHVCQUF1QixDQUFDO0lBR3ZGO1FBQUFBO1lBQUFDLGlCQW1DQ0E7WUFqQ1VBLFdBQU1BLEdBQUdBLEVBQUVBLENBQUNBLFVBQVVBLENBQVVBLElBQUlBLENBQUNBLENBQUNBO1lBQ3RDQSxrQkFBYUEsR0FBR0EsSUFBSUEsdUJBQXVCQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtZQUNsREEsc0JBQWlCQSxHQUFHQSxJQUFJQSx1QkFBdUJBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBO1lBQ3ZEQSxvQkFBZUEsR0FBR0EsRUFBRUEsQ0FBQ0EsZUFBZUEsRUFBMEJBLENBQUNBO1lBRS9EQSxlQUFVQSxHQUFHQTtnQkFDZkEsS0FBSUEsQ0FBQ0EsT0FBT0EsRUFBRUEsQ0FBQ0E7WUFDcEJBLENBQUNBLENBQUFBO1lBRURBLFlBQU9BLEdBQUdBO2dCQUNOQSxLQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtnQkFDbEJBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLDJCQUEyQkEsRUFBRUEsVUFBQUEsSUFBSUE7b0JBQ25DQSxPQUFPQSxDQUFDQSxHQUFHQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtvQkFDbEJBLEtBQUlBLENBQUNBLE1BQU1BLENBQUNBLEtBQUtBLENBQUNBLENBQUNBO29CQUVuQkEsS0FBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsT0FBT0EsRUFBRUEsQ0FBQ0E7b0JBQzdCQSxLQUFJQSxDQUFDQSxhQUFhQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxXQUFXQSxDQUFDQSxDQUFDQTtvQkFFM0NBLEtBQUlBLENBQUNBLGlCQUFpQkEsQ0FBQ0EsT0FBT0EsRUFBRUEsQ0FBQ0E7b0JBQ2pDQSxLQUFJQSxDQUFDQSxpQkFBaUJBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLGNBQWNBLENBQUNBLENBQUNBO29CQUVsREEsS0FBSUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsQ0FBQ0E7Z0JBQzdDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNQQSxDQUFDQSxDQUFBQTtZQUVEQSx3QkFBbUJBLEdBQUdBLFVBQUNBLE1BQWVBO2dCQUNsQ0EsSUFBSUEsR0FBR0EsR0FBR0EsbUJBQW1CQSxHQUFHQSxDQUFDQSxNQUFNQSxHQUFHQSxnQkFBZ0JBLEdBQUdBLHFCQUFxQkEsQ0FBQ0EsQ0FBQ0E7Z0JBQ3BGQSxJQUFJQSxFQUFFQSxHQUFHQSxNQUFNQSxHQUFHQSxLQUFJQSxDQUFDQSxhQUFhQSxHQUFHQSxLQUFJQSxDQUFDQSxpQkFBaUJBLENBQUNBO2dCQUM5REEsSUFBSUEsS0FBS0EsR0FBR0EsRUFBRUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0E7Z0JBQ3hCQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxHQUFHQSxFQUFFQSxFQUFFQSxLQUFLQSxFQUFFQSxLQUFLQSxFQUFFQSxFQUFFQTtvQkFDMUJBLEtBQUlBLENBQUNBLFVBQVVBLEVBQUVBLENBQUNBO2dCQUN0QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDUEEsQ0FBQ0EsQ0FBQUE7UUFDTEEsQ0FBQ0E7UUFBREQsMEJBQUNBO0lBQURBLENBbkNBLEFBbUNDQSxJQUFBO0lBRUQsT0FBUyxtQkFBbUIsQ0FBQSIsImZpbGUiOiJFeGNoYW5nZUFwcGxpY2F0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uL3R5cGluZ3Mva25vY2tvdXQva25vY2tvdXQuZC50c1wiIC8+XHJcbi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi90eXBpbmdzL2pxdWVyeS9qcXVlcnkuZC50c1wiIC8+XHJcblxyXG5pbXBvcnQgJCA9IHJlcXVpcmUoJ2pxdWVyeScpO1xyXG5pbXBvcnQga28gPSByZXF1aXJlKCdrbm9ja291dCcpO1xyXG5pbXBvcnQgRXhjaGFuZ2VHcm91cFZpZXdNb2RlbCA9IHJlcXVpcmUoXCIuL0V4Y2hhbmdlR3JvdXBWaWV3TW9kZWxcIik7XHJcbmltcG9ydCBFeGNoYW5nZUVkaXRvclZpZXdNb2RlbCA9IEV4Y2hhbmdlR3JvdXBWaWV3TW9kZWwuQ29tbW9uLkV4Y2hhbmdlRWRpdG9yVmlld01vZGVsO1xyXG5pbXBvcnQgUmVnaXN0ZXJlZEl0ZW1WaWV3TW9lbCA9IEV4Y2hhbmdlR3JvdXBWaWV3TW9kZWwuQ29tbW9uLlJlZ2lzdGVyZWRJdGVtVmlld01vZWw7XHJcblxyXG5jbGFzcyBFeGNhaG5nZUFwcGxpY2F0aW9uIHtcclxuXHJcbiAgICBwdWJsaWMgSXNCdXN5ID0ga28ub2JzZXJ2YWJsZTxib29sZWFuPih0cnVlKTtcclxuICAgIHB1YmxpYyBTYWxlVmlld01vZGVsID0gbmV3IEV4Y2hhbmdlRWRpdG9yVmlld01vZGVsKHRydWUpO1xyXG4gICAgcHVibGljIFB1cmNoYXNlVmlld01vZGVsID0gbmV3IEV4Y2hhbmdlRWRpdG9yVmlld01vZGVsKGZhbHNlKTtcclxuICAgIHB1YmxpYyBSZWdpc3RlcmVkSXRlbXMgPSBrby5vYnNlcnZhYmxlQXJyYXk8UmVnaXN0ZXJlZEl0ZW1WaWV3TW9lbD4oKTtcclxuXHJcbiAgICBwdWJsaWMgaW5pdGlhbGl6ZSA9ICgpID0+IHtcclxuICAgICAgICAgdGhpcy5yZWZyZXNoKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVmcmVzaCA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLklzQnVzeSh0cnVlKTtcclxuICAgICAgICAkLmdldChcIi9hcGkvdjEvRXhjaGFuZ2UvR2V0TW9kZWxcIiwgZGF0YSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgICAgICB0aGlzLklzQnVzeShmYWxzZSk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLlNhbGVWaWV3TW9kZWwuQ2xlYW5VcCgpO1xyXG4gICAgICAgICAgICB0aGlzLlNhbGVWaWV3TW9kZWwuSXRlbXMoZGF0YS5TYWxlc09yZGVycyk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLlB1cmNoYXNlVmlld01vZGVsLkNsZWFuVXAoKTtcclxuICAgICAgICAgICAgdGhpcy5QdXJjaGFzZVZpZXdNb2RlbC5JdGVtcyhkYXRhLlB1cmNoYXNlT3JkZXJzKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuUmVnaXN0ZXJlZEl0ZW1zKGRhdGEuUmVnaXN0cmF0aW9ucyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkTmV3RXhjaGFuZ2VHcm91cCA9IChpc1NhbGU6IGJvb2xlYW4pID0+IHtcclxuICAgICAgICB2YXIgdXJsID0gXCIvYXBpL3YxL0V4Y2hhbmdlL1wiICsgKGlzU2FsZSA/IFwiQWRkTmV3U2FsZUl0ZW1cIiA6IFwiQWRkTmV3UHVyY2hhaXNlSXRlbVwiKTtcclxuICAgICAgICB2YXIgdm0gPSBpc1NhbGUgPyB0aGlzLlNhbGVWaWV3TW9kZWwgOiB0aGlzLlB1cmNoYXNlVmlld01vZGVsO1xyXG4gICAgICAgIHZhciBtb2RlbCA9IGtvLnRvSlModm0pO1xyXG4gICAgICAgICQucG9zdCh1cmwsIHsgbW9kZWw6IG1vZGVsIH0sICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5pbml0aWFsaXplKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCA9IEV4Y2FobmdlQXBwbGljYXRpb24iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
